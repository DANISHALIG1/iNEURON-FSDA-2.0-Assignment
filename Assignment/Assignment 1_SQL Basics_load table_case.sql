USE DATABASE DANISH_DATABASE;

CREATE OR REPLACE TABLE SALES_DATA
          ( ORDER_ID VARCHAR (30),
            ORDER_DATE DATE,
            SHIP_DATE DATE,
            SHIP_MODE VARCHAR (20),
            CUSTOMER_NAME VARCHAR(30),
            SEGMENT VARCHAR (15),
            STATE VARCHAR (50),
            COUNTRY VARCHAR (50),
            MARKET VARCHAR (15),
            REGEION VARCHAR (15),
            PRODUCT_ID VARCHAR(80),
            CATEGORY VARCHAR(30),
            SUB_CATEGORY VARCHAR(30),
            PRODUCT_NAME VARCHAR(200),
            SALES NUMBER (10,0),
            QUANTITY INT,
            DISCOUNT INT,
            PROFIT INT,
            SHIPPING_COST INT,
            ORDER_PRIORITY CHAR(15),
            YEAR_ORDER VARCHAR (15));

DESCRIBE TABLE SALES_DATA;

SELECT DISTINCT * FROM SALES_DATA;

CREATE OR REPLACE TABLE SALES_DATA_COPY AS SELECT * FROM SALES_DATA;

SELECT * FROM SALES_DATA_COPY;

--1. SET PRIMARY KEY.

ALTER TABLE SALES_DATA_COPY
ADD PRIMARY KEY(ORDER_ID);
DESCRIBE TABLE SALES_DATA_COPY;

--2. CHECK THE ORDER DATE AND SHIP DATE TYPE AND THINK IN WHICH DATA TYPE YOU HAVE TO CHANGE.

--ans-2: I have clean the data in Order_date and Ship_date and arrange theem in date format before loading the data. Then I use date datatype while creating the table for order_id and ship_id.
DESCRIBE TABLE SALES_DATA_COPY;

--3. EXTRACT THE LAST NUMBER AFTER THE - AND CREATE OTHER COLUMN AND UPDATE IT.

CREATE OR REPLACE TABLE SALES_DATA_COPY AS
SELECT *, SUBSTR(ORDER_ID,9) AS LAST FROM SALES_DATA_COPY;

SELECT * FROM SALES_DATA_COPY;


--4.  FLAG, IF DISCOUNT IS GREATER THEN 0 THEN YES ELSE FALSE AND PUT IT IN NEW COLUMN FRO EVERY ORDER ID.

DESCRIBE TABLE SALES_DATA_COPY;

CREATE OR REPLACE TABLE SALES_DATA_COPY AS
SELECT *,
         CASE
             WHEN DISCOUNT >= '0' THEN 'YES'
             ELSE 'FALSE'
             END AS FROM_EVERY_ORDER_ID
FROM SALES_DATA_COPY;  

SELECT * FROM SALES_DATA_COPY;

--6.  FIND OUT HOW MUCH DAYS TAKEN FOR EACH ORDER TO PROCESS FOR THE SHIPMENT FOR EVERY ORDER ID.

CREATE OR REPLACE TABLE SALES_DATA_COPY AS
SELECT*, DATEDIFF(DAY, ORDER_DATE, SHIP_DATE) AS PROCESS_DAYS FROM SALES_DATA_COPY;

SELECT * FROM SALES_DATA_COPY;

--7. FLAG THE PROCESS DAY AS BY RATING IF IT TAKES LESS OR EQUAL 3 DAYS MAKE 5, LESS OR EQUAL THAN 6 DAYS BUT MORE THAN 3 MAKE 4, LESS THAN 10 BUT MORE THAN 6 MAKE 3, MORE THAN 10 MAKE IT 2 FOR EVERY ORDER ID.

CREATE OR REPLACE TABLE SALES_DATA_COPY AS
SELECT *,
         CASE
             WHEN PROCESS_DAYS <= '3' THEN '5'
             WHEN PROCESS_DAYS BETWEEN '4' AND '6' THEN '4'
             WHEN PROCESS_DAYS BETWEEN '10' AND '6' THEN '3'
             WHEN PROCESS_DAYS >= '10' THEN '2'
             ELSE 1
        END AS PROCESS_DAY_RATING
FROM SALES_DATA_COPY;

SELECT * FROM SALES_DATA_COPY;



